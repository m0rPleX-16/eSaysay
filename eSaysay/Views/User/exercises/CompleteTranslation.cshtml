@model eSaysay.Models.Entities.InteractiveExercise
@{
    ViewData["Title"] = "Complete Translation";
    ViewData["PageClass"] = "CompleteTranslation-Page";
}

<div class="container complete-exercise">
    <div class="header-complete">
        <a asp-controller="Dashboard" asp-action="LessonDetails" asp-route-id="@Model.LessonID" class="btn close-button-complete">✖</a>
        <div class="progress-bar"><div class="progress-bar-inner"></div></div>
    </div>

    <div class="title title-question">Complete the translation</div>
    <center><div class="container complete-content"><h6>@Model.ContentTranslate</h6></div></center>

    <!-- Dynamic Answer Grid -->
    <div class="container answer-grid" id="answer-grid">
        @if (!string.IsNullOrEmpty(Model.AnswerChoices))
        {
            var choices = Model.AnswerChoices.Split(',').Select(c => c.Trim()).ToList();
            foreach (var choice in choices)
            {
                <button onclick="selectAnswer('@choice')">@choice</button>
            }
        }
        else
        {
            <p>No answer choices available.</p>
        }
    </div>

    <div class="footer">
        <button class="skip" onclick="skip()">Skip</button>
        <button class="check" onclick="checkAnswer()">Check</button>
    </div>
</div>

<script>
    function checkAnswer() {
        const selectedAnswer = sessionStorage.getItem('selectedAnswer');

        if (!selectedAnswer) {
            alert('Please select an answer first!');
            return;
        }

        fetch(`/Translation/Translate?text=${encodeURIComponent(selectedAnswer)}&fromLang=de&toLang=en`)
            .then(response => response.json())
            .then(data => {
                const translatedText = data.translatedText;
                const correctAnswer = "@Model.CorrectAnswer";
                const isCorrect = translatedText.toLowerCase() === correctAnswer.toLowerCase();

                // Send user response to server
                fetch('/Exercise/SaveUserResponse', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        userID: "@User.Identity.Name",
                        exerciseID: @Model.ExerciseID,
                        userAnswer: selectedAnswer,
                        isCorrect: isCorrect
                    })
                })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    if (data.isCorrect) {
                        updateUserProgress();
                    }
                })
                .catch(error => console.error("Error saving response:", error));
            })
            .catch(error => console.error("Translation Error:", error));
    }
</script>