@model eSaysay.Models.ViewModels.AnalyticsModel

@{
    ViewData["Title"] = "Analytics";
}
<main class="admin-analytics">
    @await Html.PartialAsync("_AdminSidebar")

    <div class="admin-analytics-content">

        <div class="admin-analytics-topbar">
            <h2>The <span class="analytics-span-dashboard">analytics</span></h2>
        </div>

        <div class="analytics-content">
            <!-- KPI Section -->
            <section class="analytics-stats">
                <div class="analytics-box">
                    <h3 class="span-analytics-box">@Model.TotalUsers</h3>
                    <span>Total Users</span>
                </div>
                <div class="analytics-box">
                    <h3 class="span-analytics-box">@(Model.AvgScore.HasValue ? Model.AvgScore.Value.ToString("0.00") + "%" : "0.00%")</h3>
                    <span>Average Score</span>
                </div>
                <div class="analytics-box">
                    <h3 class="span-analytics-box">@(Model.TotalTimeSpent.HasValue ? Model.TotalTimeSpent.Value + " mins" : "0 mins")</h3>
                    <span>Total Time Spent</span>
                </div>
                <div class="analytics-box">
                    <h3 class="span-analytics-box">@(Model.TotalLessonsCompleted > 0 ? Model.TotalLessonsCompleted.ToString() : "0")</h3>
                    <span>Lessons Completed</span>
                </div>
            </section>

            <!-- Graph Section -->
            <section class="analytics-graphs mt-5">
                <span class="analytics-graph-span">User performance overview</span>
                <div class="canvas-analytics mt-4">

                    <canvas id="userAnalyticsChart"></canvas>
                </div>
            </section>

            <section class="analytics-graphs mt-5">
                <span class="analytics-graph-span">Lessons completed over time</span>
                <div class="canvas-analytics mt-4">
                    <canvas id="lessonsCompletedChart"></canvas>
                </div>

            </section>
        </div>
    </div>
</main>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var analyticsDates = @Json.Serialize(Model.AnalyticsDates);
        var analyticsScores = @Json.Serialize(Model.AnalyticsScores);
        var analyticsTimeSpent = @Json.Serialize(Model.AnalyticsTimeSpent);
        var lessonsCompleted = @Json.Serialize(Model.LessonsCompleted);

        if (analyticsDates.length === 0 || analyticsScores.length === 0 || analyticsTimeSpent.length === 0) {
            console.warn("No analytics data available.");
            document.querySelector(".analytics-graphs").innerHTML = "<p class='text-muted'>No data available for analytics.</p>";
            return;
        }

        var ctxAnalytics = document.getElementById('userAnalyticsChart').getContext('2d');
        var userAnalyticsChart = new Chart(ctxAnalytics, {
            type: 'line',
            data: {
                labels: analyticsDates,
                datasets: [{
                    label: 'Average Scores',
                    data: analyticsScores,
                    backgroundColor: 'rgba(43, 115, 167, 0.2)',
                    borderColor: 'rgba(43, 115, 167, 1)',
                    borderWidth: 2
                }, {
                    label: 'Time Spent (mins)',
                    data: analyticsTimeSpent,
                    backgroundColor: 'rgba(54, 124, 30, 0.2)',
                    borderColor: 'rgba(54, 124, 30, 1)',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                family: 'Poppins', // Change to your preferred font
                                size: 12,        // Font size
                                color: '#274052' // Font color
                            }
                        }
                    }
                }
            }
        });

        var ctxLessons = document.getElementById('lessonsCompletedChart').getContext('2d');
        var lessonsCompletedChart = new Chart(ctxLessons, {
            type: 'bar',
            data: {
                labels: analyticsDates,
                datasets: [{
                    label: 'Lessons Completed',
                    data: lessonsCompleted,
                    backgroundColor: 'rgba(43, 167, 117, 0.2)',
                    borderColor: 'rgba(43, 167, 117, 1)',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        labels: {
                            font: {
                                family: 'Poppins', // Change to your preferred font
                                size: 12,        // Font size
                                color: '#274052' // Font color
                            }
                        }
                    }
                }
            }
        });
    });
</script>
