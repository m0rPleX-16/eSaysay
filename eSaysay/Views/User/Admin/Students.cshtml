@using Microsoft.AspNetCore.Identity
@model List<ApplicationUser>

@{
    ViewData["Title"] = "Registered Students";
}
<main class="admin-students">
    @await Html.PartialAsync("_AdminSidebar")

    <header class="admin-students-header">
        <h2>Registered Students</h2>
    </header>

    <!-- Search Bar -->
    <div class="students-searchbar">
        <input type="text" id="studentSearchInput" class="form-control" placeholder="Search by email...">
    </div>

    <!-- Students Table Container (AJAX Loaded) -->
    <div id="studentsTableContainer">
        @await Html.PartialAsync("~/Views/User/Admin/Partial/_StudentsTablePartial.cshtml", Model)
        <a href="@Url.Action("ArchivedStudents", "Admin")" class="btn btn-warning fw-bold mt-3">
            <i class="fa fa-archive" aria-hidden="true"></i> View Archived Students
        </a>
    </div>

    @section Scripts {
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            $(document).ready(function () {
                function loadStudents(page = 1) {
                    const searchQuery = $('#studentSearchInput').val();
                    $.ajax({
                        url: '/Admin/FilterStudents',
                        type: 'GET',
                        data: { search: searchQuery, page: page },
                        success: function (response) {
                            console.log("AJAX Response:", response); // ✅ Debug Response

                            $('#studentsTableContainer').html(response);

                            // Ensure Pagination Buttons Are Updated
                            const paginationHtml = $(response).find('.students-pagination').html();
                            if (paginationHtml) {
                                $('.students-pagination').html(paginationHtml);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching filtered students:', error);
                        }
                    });
                }

                // Search students with debounce
                let timeoutId;
                $('#studentSearchInput').on('input', function () {
                    clearTimeout(timeoutId);
                    timeoutId = setTimeout(() => {
                        loadStudents();
                    }, 300);
                });

                // Handle pagination clicks
                $(document).on('click', '.pagination-link', function (e) {
                    e.preventDefault();
                    const page = $(this).data('page');
                    loadStudents(page);
                });
            });
        </script>
        <script>
            $(document).ready(function () {
                console.log("jQuery is working!"); // Debugging
            });
        </script>

    }
</main>
