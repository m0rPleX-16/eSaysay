@using Microsoft.AspNetCore.Identity;
@using eSaysay.Models.Entities;

@model List<InteractiveExercise>
@{
    ViewData["Title"] = "Manage Exercises";
}
<main class="admin-exercise">

    @await Html.PartialAsync("_AdminSidebar")
    <div class="admin-exercises-content">
        <div class="admin-exercises-topbar">
            <h2>Manage <span class="exercises-span-dashboard">exercises</span></h2>
        </div>


        <div class="exercises-searchbar">
            <input type="text" id="exerciseSearchInput" class="form-control exercises-search-form" placeholder="Search by content, type, and difficulty..." value="@ViewBag.SearchTerm">
        </div>

        <div class="exercise-content">

            <div class="exercises-main-btn d-flex justify-content-between">
                <button type="button" class="btn btn-exercises-add mb-3" data-bs-toggle="modal" data-bs-target="#addExerciseModal">
                    Add Exercise
                </button>

                <a href="@Url.Action("ArchivedExercises", "Admin")" class="btn btn-exercises-view-archive">
                    View Archived Exercises
                </a>
            </div>

        </div>

        <div id="exercisesContainer">
            @await Html.PartialAsync("~/Views/User/Admin/Partial/_ExercisesTablePartial.cshtml", Model)
        </div>

        <!-- Add Exercise Modal -->
        <div class="modal fade" id="addExerciseModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add Exercise</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <form method="post" action="/Admin/CreateExercise">
                        <div class="modal-body">
                       
                                @Html.AntiForgeryToken()
                                <div class="mb-3">
                                    <label class="form-label">Content</label>
                                    <input type="text" class="form-control" name="Content" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Exercise Type</label>
                                    <select class="form-control" name="ExerciseType" required onchange="handleExerciseTypeChange(this)">
                                        <option value="Listening Exercise">Listening Exercise</option>
                                        <option value="Correct Translation">Correct Translation</option>
                                        <option value="Complete Translation">Complete Translation</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Correct Answer</label>
                                    <input type="text" class="form-control" name="CorrectAnswer" required>
                                </div>
                                <div class="mb-3" id="answerChoicesSection">
                                    <label class="form-label">Answer Choices</label>
                                    <input type="text" class="form-control" name="AnswerChoices">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Hint</label>
                                    <input type="text" class="form-control" name="Hint">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Difficulty Level</label>
                                    <select class="form-control" name="DifficultyLevel" required>
                                        <option value="Easy">Easy</option>
                                        <option value="Medium">Medium</option>
                                        <option value="Hard">Hard</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Lesson</label>
                                    <select class="form-control" name="LessonID" required>
                                        <option value="">-- Select a Lesson --</option>
                                        @foreach (var lesson in ViewBag.Lessons)
                                        {
                                            <option value="@lesson.LessonID">@lesson.Title</option>
                                        }
                                    </select>
                                </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-exercises-add">Add</button>
                        </div>
                      </form>
                </div>
            </div>
        </div>

    </div>


</main>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to load exercises via AJAX
            function loadExercises(page = 1) {
                const searchTerm = $('#exerciseSearchInput').val();
                $.ajax({
                    url: '/Admin/FilterExercises',
                    type: 'GET',
                    data: { searchTerm: searchTerm, page: page },
                    success: function (response) {
                        $('#exercisesContainer').html(response);
                        $('.exercises-pagination').html($(response).find('.exercises-pagination').html());
                        attachEventHandlers(); // Re-attach event handlers after AJAX call
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching filtered data:', error);
                        console.error('Response Text:', xhr.responseText);
                    }
                });
            }

            // Debounce function to prevent excessive AJAX calls
            let timeoutId;
            $('#exerciseSearchInput').on('input', function () {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(() => {
                    loadExercises();
                }, 300);
            });

            // Handle pagination clicks
            $(document).on('click', '.pagination-link', function (e) {
                e.preventDefault();
                const page = $(this).data('page');
                loadExercises(page);
            });

            // Function to attach event handlers
            function attachEventHandlers() {
                // Attach event handlers for edit buttons
                $('.btn-exercise-edit').on('click', function () {
                    const exerciseID = $(this).data('id');
                    const content = $(this).data('content');
                    const type = $(this).data('type');
                    const answer = $(this).data('answer');
                    const choices = $(this).data('choices');
                    const hint = $(this).data('hint');
                    const difficulty = $(this).data('difficulty');
                    const lesson = $(this).data('lesson');

                    $('#editExerciseID').val(exerciseID);
                    $('#editExerciseContent').val(content);
                    $('#editExerciseType').val(type);
                    $('#editCorrectAnswer').val(answer);
                    $('#editAnswerChoices').val(choices);
                    $('#editHint').val(hint);
                    $('#editDifficultyLevel').val(difficulty);
                    $('#editLessonID').val(lesson);
                });

                // Attach event handlers for archive buttons
                $('.btn-exercise-archive').on('click', function () {
                    const exerciseID = $(this).data('id');
                    const content = $(this).data('content');

                    $('#archiveExerciseID').val(exerciseID);
                    $('#archiveExerciseContent').text(content);
                });
            }

            // Initial attachment of event handlers
            attachEventHandlers();
        });
    </script>
}