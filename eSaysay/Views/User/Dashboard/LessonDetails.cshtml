@model List<eSaysay.Models.Entities.InteractiveExercise>
@{
    var lesson = ViewBag.Lesson as eSaysay.Models.Entities.Lesson;
    ViewData["Title"] = $"{lesson.Title} - Exercises";
}

<div class="lesson-details-container">
    <h2 class="lesson-title">@lesson.Title</h2>
    <p class="lesson-description">@lesson.Description</p>

    @if (Model == null || !Model.Any())
    {
        <p class="text-muted">No exercises available for this lesson.</p>
    }
    else
    {
        <!-- Dropdown for filtering -->
        <div class="filter-container">
            <label for="exerciseFilter">Filter by Status:</label>
            <select id="exerciseFilter" class="form-control" onchange="filterExercises()">
                <option value="all">All</option>
                <option value="not-started">Not Started</option>
                <option value="in-progress">In Progress</option>
                <option value="completed">Completed</option>
            </select>
        </div>

        <div class="carousel-wrapper">
            <button class="carousel-control prev" onclick="moveSlide(-1)">&#10094;</button>
            <div class="carousel">
                <div class="exercise-list">
                    @foreach (var exercise in Model)
                    {
                        var isCompleted = ViewBag.CompletedExercises != null && ViewBag.CompletedExercises.Contains(exercise.ExerciseID);
                        var isStarted = ViewBag.StartedExercises != null && ViewBag.StartedExercises.Contains(exercise.ExerciseID);
                        var statusClass = isCompleted ? "completed-exercise" : isStarted ? "started-exercise" : "not-started-exercise";

                        <div class="exercise-card @statusClass" data-status="@statusClass">
                            @if (isCompleted)
                            {
                                <div class="badge badge-success">Completed</div>
                            }
                            else if (isStarted)
                            {
                                <div class="badge badge-warning">In Progress</div>
                            }

                            <h3 class="exercise-type">@exercise.ExerciseType</h3>
                            <p class="exercise-content">@exercise.Content</p>
                            <a asp-controller="Dashboard" asp-action="StartExercise" asp-route-exerciseId="@exercise.ExerciseID" class="btn btn-start">
                                @(isCompleted ? "Review Exercise" : "Start Exercise")
                            </a>
                        </div>
                    }
                </div>
            </div>
            <button class="carousel-control next" onclick="moveSlide(1)">&#10095;</button>
        </div>
    }

    <a asp-controller="Dashboard" asp-action="Index" class="btn btn-back">Back to Lessons</a>
</div>

<style>
    .completed-exercise {
        opacity: 0.5;
        pointer-events: none;
    }

    .started-exercise {
        border: 2px solid orange;
    }

    .not-started-exercise {
        border: 2px solid blue;
    }

    .badge {
        padding: 5px;
        color: white;
        font-size: 12px;
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .badge-success {
        background-color: green;
    }

    .badge-warning {
        background-color: orange;
    }
</style>

<script>
        function filterExercises() {
        var filter = document.getElementById("exerciseFilter").value;
        var exercises = document.querySelectorAll(".exercise-card");

        exercises.forEach(function (exercise) {
            var status = exercise.classList.contains("completed-exercise")
                ? "completed"
                : exercise.classList.contains("started-exercise")
                ? "in-progress"
                : "not-started";

            if (filter === "all" || status === filter) {
                exercise.style.display = "block";
            } else {
                exercise.style.display = "none";
            }
        });
    }
</script>
